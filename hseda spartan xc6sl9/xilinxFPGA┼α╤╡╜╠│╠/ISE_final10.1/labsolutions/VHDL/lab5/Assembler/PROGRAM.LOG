KCPSM3 Assembler log file for program 'program.psm'.
Generated by KCPSM3 version 1.20
Ken Chapman (Xilinx Ltd) 2004.

 Addr Code

 000                     ;================================================================
 000                     ; Port address definitions...
 000                     ;================================================================
 000                     CONSTANT switch_in, 00      ; Switch read port
 000                     CONSTANT leds_out, 01       ; LED write port
 000                     CONSTANT uart_data_rx, 02   ; UART receive read port
 000                     CONSTANT uart_data_tx, 03   ; UART transmit write port
 000                     CONSTANT data_present, 04   ; UART stat read port, lsb
 000                     CONSTANT buffer_full, 05    ; UART stat read port, lsb
 000                     ;================================================================
 000                     ; Useful constant declarations...
 000                     ;================================================================
 000                     CONSTANT all_clear, 00      ; define zero
 000                     CONSTANT ascii_NUL, 00      ; ascii code (null character)
 000                     CONSTANT ascii_SOH, 01      ; ascii code (start of header)
 000                     CONSTANT ascii_STX, 02      ; ascii code (start of text)
 000                     CONSTANT ascii_ETX, 03      ; ascii code (end of text)
 000                     CONSTANT ascii_EOT, 04      ; ascii code (end of xmit)
 000                     CONSTANT ascii_ENQ, 05      ; ascii code (enquiry)
 000                     CONSTANT ascii_ACK, 06      ; ascii code (acknowledge)
 000                     CONSTANT ascii_BEL, 07      ; ascii code (bell)
 000                     CONSTANT ascii_BS, 08       ; ascii code (backspace)
 000                     CONSTANT ascii_HT, 09       ; ascii code (horiz tab)
 000                     CONSTANT ascii_LF, 0A       ; ascii code (line feed)
 000                     CONSTANT ascii_VT, 0B       ; ascii code (vert tab)
 000                     CONSTANT ascii_FF, 0C       ; ascii code (form feed)
 000                     CONSTANT ascii_CR, 0D       ; ascii code (carriage return)
 000                     CONSTANT ascii_SO, 0E       ; ascii code (shift out)
 000                     CONSTANT ascii_SI, 0F       ; ascii code (shift in)
 000                     CONSTANT ascii_DLE, 10      ; ascii code (data link esc)
 000                     CONSTANT ascii_DC1, 11      ; ascii code (device ctrl 1, xon)
 000                     CONSTANT ascii_DC2, 12      ; ascii code (device ctrl 2)
 000                     CONSTANT ascii_DC3, 13      ; ascii code (device ctrl 3, xoff)
 000                     CONSTANT ascii_DC4, 14      ; ascii code (device ctrl 4)
 000                     CONSTANT ascii_NAK, 15      ; ascii code (negative acknowledge)
 000                     CONSTANT ascii_SYN, 16      ; ascii code (sync idle)
 000                     CONSTANT ascii_ETB, 17      ; ascii code (end xmit block)
 000                     CONSTANT ascii_CAN, 18      ; ascii code (cancel)
 000                     CONSTANT ascii_EM, 19       ; ascii code (end of medium)
 000                     CONSTANT ascii_SUB, 1A      ; ascii code (substitute)
 000                     CONSTANT ascii_ESC, 1B      ; ascii code (escape)
 000                     CONSTANT ascii_FS, 1C       ; ascii code (file separator)
 000                     CONSTANT ascii_GS, 1D       ; ascii code (group separator)
 000                     CONSTANT ascii_RS, 1E       ; ascii code (record separator)
 000                     CONSTANT ascii_US, 1F       ; ascii code (unit space)
 000                     CONSTANT ascii_SPACE, 20    ; ascii code
 000                     CONSTANT ascii_EXCLAIM, 21  ; ascii code
 000                     CONSTANT ascii_DBLQUOT, 22  ; ascii code
 000                     CONSTANT ascii_NUMSIGN, 23  ; ascii code
 000                     CONSTANT ascii_DOLLAR, 24   ; ascii code
 000                     CONSTANT ascii_PERCENT, 25  ; ascii code
 000                     CONSTANT ascii_AMP, 26      ; ascii code
 000                     CONSTANT ascii_SINQUOT, 27  ; ascii code
 000                     CONSTANT ascii_LPAREN, 28   ; ascii code
 000                     CONSTANT ascii_RPAREN, 29   ; ascii code
 000                     CONSTANT ascii_ASTERISK, 2A ; ascii code
 000                     CONSTANT ascii_PLUS, 2B     ; ascii code
 000                     CONSTANT ascii_COMMA, 2C    ; ascii code
 000                     CONSTANT ascii_MINUS, 2D    ; ascii code
 000                     CONSTANT ascii_PERIOD, 2E   ; ascii code
 000                     CONSTANT ascii_FWDSLASH, 2F ; ascii code
 000                     CONSTANT ascii_0, 30        ; ascii code
 000                     CONSTANT ascii_1, 31        ; ascii code
 000                     CONSTANT ascii_2, 32        ; ascii code
 000                     CONSTANT ascii_3, 33        ; ascii code
 000                     CONSTANT ascii_4, 34        ; ascii code
 000                     CONSTANT ascii_5, 35        ; ascii code
 000                     CONSTANT ascii_6, 36        ; ascii code
 000                     CONSTANT ascii_7, 37        ; ascii code
 000                     CONSTANT ascii_8, 38        ; ascii code
 000                     CONSTANT ascii_9, 39        ; ascii code
 000                     CONSTANT ascii_COLON, 3A    ; ascii code
 000                     CONSTANT ascii_SEMI, 3B     ; ascii code
 000                     CONSTANT ascii_LESS, 3C     ; ascii code
 000                     CONSTANT ascii_EQUAL, 3D    ; ascii code
 000                     CONSTANT ascii_GREATER, 3E  ; ascii code
 000                     CONSTANT ascii_QUESTION, 3F ; ascii code
 000                     CONSTANT ascii_CIRCAT, 40   ; ascii code
 000                     CONSTANT ascii_A, 41        ; ascii code
 000                     CONSTANT ascii_B, 42        ; ascii code
 000                     CONSTANT ascii_C, 43        ; ascii code
 000                     CONSTANT ascii_D, 44        ; ascii code
 000                     CONSTANT ascii_E, 45        ; ascii code
 000                     CONSTANT ascii_F, 46        ; ascii code
 000                     CONSTANT ascii_G, 47        ; ascii code
 000                     CONSTANT ascii_H, 48        ; ascii code
 000                     CONSTANT ascii_I, 49        ; ascii code
 000                     CONSTANT ascii_J, 4A        ; ascii code
 000                     CONSTANT ascii_K, 4B        ; ascii code
 000                     CONSTANT ascii_L, 4C        ; ascii code
 000                     CONSTANT ascii_M, 4D        ; ascii code
 000                     CONSTANT ascii_N, 4E        ; ascii code
 000                     CONSTANT ascii_O, 4F        ; ascii code
 000                     CONSTANT ascii_P, 50        ; ascii code
 000                     CONSTANT ascii_Q, 51        ; ascii code
 000                     CONSTANT ascii_R, 52        ; ascii code
 000                     CONSTANT ascii_S, 53        ; ascii code
 000                     CONSTANT ascii_T, 54        ; ascii code
 000                     CONSTANT ascii_U, 55        ; ascii code
 000                     CONSTANT ascii_V, 56        ; ascii code
 000                     CONSTANT ascii_W, 57        ; ascii code
 000                     CONSTANT ascii_X, 58        ; ascii code
 000                     CONSTANT ascii_Y, 59        ; ascii code
 000                     CONSTANT ascii_Z, 5A        ; ascii code
 000                     CONSTANT ascii_LBKT, 5B     ; ascii code
 000                     CONSTANT ascii_BKSLASH, 5C  ; ascii code
 000                     CONSTANT ascii_RBKT, 5D     ; ascii code
 000                     CONSTANT ascii_CARET, 5E    ; ascii code
 000                     CONSTANT ascii_UNDER, 5F    ; ascii code
 000                     CONSTANT ascii_TICK, 60     ; ascii code
 000                     CONSTANT ascii_a, 61        ; ascii code
 000                     CONSTANT ascii_b, 62        ; ascii code
 000                     CONSTANT ascii_c, 63        ; ascii code
 000                     CONSTANT ascii_d, 64        ; ascii code
 000                     CONSTANT ascii_e, 65        ; ascii code
 000                     CONSTANT ascii_f, 66        ; ascii code
 000                     CONSTANT ascii_g, 67        ; ascii code
 000                     CONSTANT ascii_h, 68        ; ascii code
 000                     CONSTANT ascii_i, 69        ; ascii code
 000                     CONSTANT ascii_j, 6A        ; ascii code
 000                     CONSTANT ascii_k, 6B        ; ascii code
 000                     CONSTANT ascii_l, 6C        ; ascii code
 000                     CONSTANT ascii_m, 6D        ; ascii code
 000                     CONSTANT ascii_n, 6E        ; ascii code
 000                     CONSTANT ascii_o, 6F        ; ascii code
 000                     CONSTANT ascii_p, 70        ; ascii code
 000                     CONSTANT ascii_q, 71        ; ascii code
 000                     CONSTANT ascii_r, 72        ; ascii code
 000                     CONSTANT ascii_s, 73        ; ascii code
 000                     CONSTANT ascii_t, 74        ; ascii code
 000                     CONSTANT ascii_u, 75        ; ascii code
 000                     CONSTANT ascii_v, 76        ; ascii code
 000                     CONSTANT ascii_w, 77        ; ascii code
 000                     CONSTANT ascii_x, 78        ; ascii code
 000                     CONSTANT ascii_y, 79        ; ascii code
 000                     CONSTANT ascii_z, 7A        ; ascii code
 000                     CONSTANT ascii_LBRACE, 7B   ; ascii code
 000                     CONSTANT ascii_VBAR, 7C     ; ascii code
 000                     CONSTANT ascii_RBRACE, 7D   ; ascii code
 000                     CONSTANT ascii_TILDE, 7E    ; ascii code
 000                     CONSTANT ascii_DEL, 7F      ; ascii code
 000                     ;================================================================
 000                     ; Actual assembly program goes here...
 000                     ;================================================================
 000  00000  cold_start: LOAD s0, all_clear[00]      ; zero out reg s0
 001  00158              LOAD s1, ascii_X[58]        ;
 002  2C103              OUTPUT s1, uart_data_tx[03] ;
 003  00169              LOAD s1, ascii_i[69]        ;
 004  2C103              OUTPUT s1, uart_data_tx[03] ;
 005  0016C              LOAD s1, ascii_l[6C]        ;
 006  2C103              OUTPUT s1, uart_data_tx[03] ;
 007  00169              LOAD s1, ascii_i[69]        ;
 008  2C103              OUTPUT s1, uart_data_tx[03] ;
 009  0016E              LOAD s1, ascii_n[6E]        ;
 00A  2C103              OUTPUT s1, uart_data_tx[03] ;
 00B  00178              LOAD s1, ascii_x[78]        ;
 00C  2C103              OUTPUT s1, uart_data_tx[03] ;
 00D  00120              LOAD s1, ascii_SPACE[20]    ;
 00E  2C103              OUTPUT s1, uart_data_tx[03] ;
 00F  00152              LOAD s1, ascii_R[52]        ;
 010  2C103              OUTPUT s1, uart_data_tx[03] ;
 011  00175              LOAD s1, ascii_u[75]        ;
 012  2C103              OUTPUT s1, uart_data_tx[03] ;
 013  0016C              LOAD s1, ascii_l[6C]        ;
 014  2C103              OUTPUT s1, uart_data_tx[03] ;
 015  00165              LOAD s1, ascii_e[65]        ;
 016  2C103              OUTPUT s1, uart_data_tx[03] ;
 017  00173              LOAD s1, ascii_s[73]        ;
 018  2C103              OUTPUT s1, uart_data_tx[03] ;
 019  00121              LOAD s1, ascii_EXCLAIM[21]  ;
 01A  2C103              OUTPUT s1, uart_data_tx[03] ;
 01B  0010D              LOAD s1, ascii_CR[0D]       ;
 01C  2C103              OUTPUT s1, uart_data_tx[03] ;
 01D  0010A              LOAD s1, ascii_LF[0A]       ;
 01E  2C103              OUTPUT s1, uart_data_tx[03] ;
 01F                     ; LAB TASK #2
 01F                     ; Write code to output a short (10 characters
 01F                     ; or less) message to the serial port.
 01F  04100        loop: INPUT s1, switch_in[00]     ; read switch state
 020  2C101              OUTPUT s1, leds_out[01]     ; write it to leds
 021                     ; LAB TASK #1
 021                     ; Write code to read the switch state and
 021                     ; then write it to the LED control port.
 021  04104  rs232_echo: INPUT s1, data_present[04]  ; check uart for data
 022  0F100              XOR s1, s0                  ; used to set flags
 023  3501F              JUMP Z, loop[01F]           ; nothing, loop again
 024  04102              INPUT s1, uart_data_rx[02]  ; read received byte
 025  2C103              OUTPUT s1, uart_data_tx[03] ; write it back out
 026  3401F              JUMP loop[01F]              ; loop again
 027                     ; LAB TASK #3
 027                     ; Write code to check if a byte has been
 027                     ; received by the uart.  If so, write it
 027                     ; back to the uart transmit port.  If not
 027                     ; don't do anything and just...
 027  3401F              JUMP loop[01F]              ; loop again
 028                     ;================================================================
 028                     ;
 028                     ;================================================================
